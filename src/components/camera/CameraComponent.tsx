import React, { useEffect, useRef, useState } from "react";
import {
  View,
  Text,
  TouchableOpacity,
  StyleSheet,
  Alert,
  Image,
} from "react-native";
import { Camera, useCameraDevices } from "react-native-vision-camera";
export default function CameraComponent() {
  const [hasPermission, setHasPermission] = useState(false);
  const [cameraPosition, setCameraPosition] = useState<"front" | "back">(
    "front"
  );
  const [photoUri, setPhotoUri] = useState<string | null>(null);
  const [flash, setFlash] = useState<"off" | "on">("off");
  const cameraRef = useRef<Camera>(null);
  const devices = useCameraDevices();
  const device = devices.find((device) => device.position === cameraPosition);

  useEffect(() => {
    (async () => {
      const status = await Camera.requestCameraPermission();
      setHasPermission(status === "granted");
    })();
  }, []);
  // N·∫øu ch∆∞a c·∫•p quy·ªÅn, hi·ªÉn th·ªã th√¥ng b√°o
  if (!hasPermission) {
    return <Text>Y√™u c·∫ßu quy·ªÅn truy c·∫≠p camera...</Text>;
  }

  // N·∫øu kh√¥ng t√¨m th·∫•y thi·∫øt b·ªã camera
  if (!device) {
    return <Text>Kh√¥ng t√¨m th·∫•y camera ph√π h·ª£p</Text>;
  }

  const takePhoto = async () => {
    if (cameraRef.current) {
      const photo = await cameraRef.current.takePhoto();
      setPhotoUri(`file://${photo.path}`);
    }
  };

  // ƒê·ªïi camera tr∆∞·ªõc/sau
  const toggleCamera = () => {
    setCameraPosition((prev) => (prev === "back" ? "front" : "back"));
  };

  // B·∫≠t/t·∫Øt Flash
  const toggleFlash = () => {
    setFlash((prev) => (prev === "off" ? "on" : "off"));
  };

  return (
    <View>
      <Camera
        ref={cameraRef}
        device={device}
        isActive={true}
        photo={true}
        torch={flash}
      />
      {/* Hi·ªÉn th·ªã ·∫£nh ch·ª•p */}
      {photoUri && (
        <Image
          source={{ uri: photoUri }}
          style={{
            position: "absolute",
            top: 50,
            left: 20,
            width: 100,
            height: 100,
            borderRadius: 10,
          }}
        />
      )}

      {/* N√∫t ƒëi·ªÅu khi·ªÉn */}
      <View
        style={{
          position: "absolute",
          bottom: 50,
          width: "100%",
          alignItems: "center",
        }}
      >
        {/* N√∫t ch·ª•p ·∫£nh */}
        <TouchableOpacity
          onPress={takePhoto}
          style={{ backgroundColor: "white", padding: 15, borderRadius: 50 }}
        >
          <Text>üì∑</Text>
        </TouchableOpacity>

        {/* N√∫t chuy·ªÉn ƒë·ªïi camera */}
        <TouchableOpacity
          onPress={toggleCamera}
          style={{ position: "absolute", left: 50, padding: 10 }}
        >
          <Text>üîÑ</Text>
        </TouchableOpacity>

        {/* N√∫t b·∫≠t/t·∫Øt flash */}
        <TouchableOpacity
          onPress={toggleFlash}
          style={{ position: "absolute", right: 50, padding: 10 }}
        >
          <Text>{flash === "off" ? "‚ö°" : "üí°"}</Text>
        </TouchableOpacity>
      </View>
    </View>
  );
}
